
apiVersion: apps/v1     #指定使用的 Kubernetes API 的版本
kind: Deployment     #指定该资源的类型
metadata:      #指定该资源的元数据，例如 name、namespace 等
  annotations:    #指定 Deployment 的注释信息。这些注释信息可以提供一些额外的描述、标记或关联其他资源等。它们对于扩展 Kubernetes 功能、监控和自动化过程非常有用。
    version: "1.1.6"
  labels:               #指定 Deployment 拥有的标签。后续可以根据标签查找匹配的 deployment 资源
    k8s-app: deployment-nginx
  name: deployment-nginx         #指定 Deployment 的名称
  namespace: test                #指定 Deployment 所属的命名空间
spec:    #指定该资源的具体配置信息
  minReadySeconds: 0             #新创建的pod在没有任何容器异常的情况下准备就绪的最小秒数
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      dyapp: nginx
      dyitem: zcy-test
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        dyapp: nginx
        dyitem: zcy-test
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dylabel_node_memorysize
                operator: Gt
                values:
                - "8"
            weight: 1
      containers:
      - name: nginx
        env:
        - name: MY_ENV
          value: PRO
        image: nginx:1.21.6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - echo 'Container was started'
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 10
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /index.html
            port: 80
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 2
        ports:
        - containerPort: 80
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /index.html
            port: 80
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 3
          successThreshold: 3
          timeoutSeconds: 2
        resources:
          limits:
            cpu: 500m
            ephemeral-storage: 2000Mi
            memory: 512Mi
          requests:
            cpu: 200m
            ephemeral-storage: 1000Mi
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp
          name: ephemeral
      dnsConfig:
        searches:
        - zcy.svc.cluster.local
        - test.svc.cluster.local
        - svc.cluster.local
        - cluster.local
      dnsPolicy: ClusterFirst
      hostAliases:
      - hostnames:
        - gray.mylocal.cn
        ip: 192.168.6.16
      hostNetwork: false
      imagePullSecrets:
      - name: tcr-dyzcy-test-pull
      initContainers:
      - name: setsysctl
        command:
        - sh
        - -c
        - |
          sysctl -w net.core.somaxconn=65535
          sysctl -w net.ipv4.ip_local_port_range="1024 65535"
          sysctl -w net.ipv4.tcp_tw_reuse=1
          sysctl -w fs.file-max=1048576
        image: busybox
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
      # nodeName: 192.168.3.12
      # nodeSelector:
      #   dyarea: wan
      #   dyenv: prod
      priority: 100
      preemptionPolicy: IfRequired
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: sa-imzcy
      serviceAccountName: sa-imzcy
      shareProcessNamespace: false
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: dynoderole
        operator: Equal
        value: gateway
      volumes:
      - name: ephemeral
        emptyDir: {}
